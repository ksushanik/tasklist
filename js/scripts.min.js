document.addEventListener('DOMContentLoaded', function () {
    const modal = document.querySelector('.taskCard');
    const modalTitle = modal.querySelector('p:first-of-type');
    const taskInput = modal.querySelector('input[type="text"]');
    const highPriorityCheckbox = modal.querySelector('.highPriority input');
    const saveButton = modal.querySelector('.btnSubmit');
    const cancelButton = modal.querySelector('.btnCancel');
    const clearButton = document.querySelector('.btnClear');

    const addButton = document.querySelector('.btnAdd');
    const taskList = document.querySelector('.taskList');

    let editingTask = null;

    function openModal(title, task = {}) {
        modalTitle.textContent = title;
        taskInput.value = task.description || '';
        highPriorityCheckbox.checked = task.highPriority || false;
        modal.style.display = 'block';
    }

    function closeModal() {
        modal.style.display = 'none';
        taskInput.value = '';
        highPriorityCheckbox.checked = false;
        editingTask = null;
    }

    function toggleModalDisplay() {
        const isModalVisible = modal.style.display === 'block';
        modal.style.display = isModalVisible ? 'none' : 'block';
    }

    function saveTask() {
        const description = taskInput.value;
        const highPriority = highPriorityCheckbox.checked;

        if (editingTask) {
            // Update existing task
            const taskToUpdate = document.querySelector(`.task[data-task-id="${editingTask}"]`);
            if (taskToUpdate) {
                taskToUpdate.querySelector('p').textContent = description;
                taskToUpdate.querySelector('.checkboxTick').checked = highPriority;
                updateTaskStyle(taskToUpdate);
            }
        } else {
            // Check if a task with the same description already exists
            const existingTask = [...document.querySelectorAll('.task p')].find(task => task.textContent === description);

            if (!existingTask) {
                // Create new task
                const newTask = document.createElement('div');
                const taskId = Date.now();
                newTask.classList.add('task');
                newTask.dataset.taskId = taskId;

                newTask.innerHTML = `
          <div class="taskContent">
            <input class="checkboxTick" type="checkbox">
            <img src="images/icons/hiprio.svg">
            <p>${description}</p>
            <div class="editButton">
              <img src="images/icons/pencil.svg">
              <img src="images/icons/trashbin.svg" data-task-id="${taskId}">
            </div>
          </div>
        `;

                taskList.appendChild(newTask);
                updateTaskStyle(newTask);
            }
        }

        closeModal();
    }

    function deleteTask(taskId) {
        const taskToDelete = document.querySelector(`.task[data-task-id="${taskId}"]`);
        if (taskToDelete) {
            taskList.removeChild(taskToDelete);
        }
    }

    function updateTaskStyle(taskElement) {
        const checkbox = taskElement.querySelector('.checkboxTick');
        const taskText = taskElement.querySelector('p');

        if (checkbox.checked) {
            taskText.style.textDecoration = 'line-through';
        } else {
            taskText.style.textDecoration = 'none';
        }
    }

    addButton.addEventListener('click', function () {
        openModal('Создать задачу');
    });

    taskList.addEventListener('click', function (event) {
        const editButton = event.target.closest('.editButton');
        const deleteButton = event.target.closest('.editButton img[data-task-id]');
        const checkbox = event.target.closest('.checkboxTick');

        if (editButton && !deleteButton) {
            editingTask = editButton.closest('.task').dataset.taskId;
            const taskDescription = event.target.closest('.taskContent').querySelector('p').textContent;
            const taskHighPriority = event.target.closest('.taskContent').querySelector('.checkboxTick').checked;
            openModal('Редактировать задачу', {description: taskDescription, highPriority: taskHighPriority});
        } else if (deleteButton) {
            const taskId = deleteButton.dataset.taskId;
            deleteTask(taskId);
        } else if (checkbox) {
            updateTaskStyle(checkbox.closest('.task'));
        }
    });

    saveButton.addEventListener('click', saveTask);
    cancelButton.addEventListener('click', closeModal);


    clearButton.addEventListener('click', function () {
        const allTasks = document.querySelectorAll('.task');
        allTasks.forEach(task => taskList.removeChild(task));
    });
});
